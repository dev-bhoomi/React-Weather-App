{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Desktop\\\\project\\\\react-weather-app\\\\src\\\\App.js\";\n// import { useState } from \"react\";\n// import Search from './Component/Search'\n// import CurrentWeather from './Component/Current-weather/Current-Weather'\n// import {WEATHER_API_URL,WEATHER_API_KEY} from \"./Component/Api\"\n// import \"./App.css\";\n// function App() {\n//   const [currentWeather, setCurrentWeather] = useState(null);\n//   const [forecast, setForecast] = useState(null);\n\n//   const handleOnSearchChange = (searchData) => {\n//     const [lat, lon] = searchData.value.split(\" \");\n\n//     const currentWeatherFetch = fetch(\n//       `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n//     );\n//     const forecastFetch = fetch(\n//       `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n//     );\n\n//     Promise.all([currentWeatherFetch, forecastFetch])\n//       .then(async (response) => {\n//         const weatherResponse = await response[0].json();\n//         const forcastResponse = await response[1].json();\n\n//         setCurrentWeather({ city: searchData.label, ...weatherResponse });\n//         setForecast({ city: searchData.label, ...forcastResponse });\n//       })\n//       .catch(console.log);\n//   };\n\n//   console.log(currentWeather);\n//   console.log(forecast)\n\n//   return (\n//     <div className=\"container\">\n//       <Search onSearchChange={handleOnSearchChange} />\n//       {currentWeather && <CurrentWeather data={currentWeather} />}\n\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport Search from './Component/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const handleOnSearchChange = searchData => {\n    console.log(handleOnSearchChange);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","App","handleOnSearchChange","searchData","console","log","children","className","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Desktop/project/react-weather-app/src/App.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import Search from './Component/Search'\r\n// import CurrentWeather from './Component/Current-weather/Current-Weather'\r\n// import {WEATHER_API_URL,WEATHER_API_KEY} from \"./Component/Api\"\r\n// import \"./App.css\";\r\n// function App() {\r\n//   const [currentWeather, setCurrentWeather] = useState(null);\r\n//   const [forecast, setForecast] = useState(null);\r\n\r\n//   const handleOnSearchChange = (searchData) => {\r\n//     const [lat, lon] = searchData.value.split(\" \");\r\n\r\n//     const currentWeatherFetch = fetch(\r\n//       `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\r\n//     );\r\n//     const forecastFetch = fetch(\r\n//       `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\r\n//     );\r\n\r\n//     Promise.all([currentWeatherFetch, forecastFetch])\r\n//       .then(async (response) => {\r\n//         const weatherResponse = await response[0].json();\r\n//         const forcastResponse = await response[1].json();\r\n\r\n//         setCurrentWeather({ city: searchData.label, ...weatherResponse });\r\n//         setForecast({ city: searchData.label, ...forcastResponse });\r\n//       })\r\n//       .catch(console.log);\r\n//   };\r\n\r\n\r\n//   console.log(currentWeather);\r\n//   console.log(forecast)\r\n\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Search onSearchChange={handleOnSearchChange} />\r\n//       {currentWeather && <CurrentWeather data={currentWeather} />}\r\n\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react'\r\nimport Search from './Component/Search'\r\n\r\nconst App = () => {\r\n\r\n  const handleOnSearchChange=(searchData)=>{\r\n    console.log(handleOnSearchChange)\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"container\">      \r\n    <Search onSearchChange={handleOnSearchChange}/>\r\n     </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB,MAAMC,oBAAoB,GAAEC,UAAU,IAAG;IACvCC,OAAO,CAACC,GAAG,CAACH,oBAAoB,CAAC;EACnC,CAAC;EACD,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAD,QAAA,eAC1BR,OAAA,CAACF,MAAM;QAACY,cAAc,EAAEN;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACL,CAAC;AAEP,CAAC;AAAAC,EAAA,GAZKZ,GAAG;AAcT,eAAeA,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}