{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Desktop\\\\project\\\\react-weather-app\\\\src\\\\Component\\\\Search.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import {AsyncPaginate} from \"react-select-async-paginate\"\n// import {GEO_API_URL,geoApiOptions} from \"./Api\"\n\n// const Search = ({onSerachChange}) => {\n//     const [Search,setSearch]  =useState(null);\n\n//     const  loadOptions=(inputValue)=>{\n//         return fetch(`${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,geoApiOptions)\n\n//         .then(response=>response.json())\n//         .then((response)=>{\n//             return{\n//                 options:response.data.map((city)=>{\n//                     return{\n//                         value:`${city.latitude} ${city.longitude}`,\n//                         label:`${city.name},${city.countryCode}`,\n//                 }\n//                 })\n//             }\n//         })\n//         .catch(err=>console.log(err))\n//     }\n//     const handleOnChange=(searchData)=>{\n//         setSearch(searchData)\n//         onSerachChange(searchData)\n//         }\n//     return (\n//     <div>\n//         <AsyncPaginate placeholder=\"Search for city\"\n//         debounceTimeout={2000} \n//         value={Search}\n//         onChange={handleOnChange}\n//         loadOptions={loadOptions}\n\n//         />\n//     </div>\n//   )\n// }\n\n// export default Search\n\nimport React, { useState } from 'react';\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSerachChange(searchData);\n  };\n  const [Search, setSearch] = useState(null);\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 2000,\n    value: Search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"mY9XoaouebGKQD4nMa5OhHnS9aM=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","jsxDEV","_jsxDEV","Search","_s","handleOnChange","searchData","setSearch","onSerachChange","placeholder","debounceTimeout","value","onChange","loadOptions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Desktop/project/react-weather-app/src/Component/Search.jsx"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import {AsyncPaginate} from \"react-select-async-paginate\"\r\n// import {GEO_API_URL,geoApiOptions} from \"./Api\"\r\n\r\n// const Search = ({onSerachChange}) => {\r\n//     const [Search,setSearch]  =useState(null);\r\n\r\n//     const  loadOptions=(inputValue)=>{\r\n//         return fetch(`${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,geoApiOptions)\r\n\r\n\r\n//         .then(response=>response.json())\r\n//         .then((response)=>{\r\n//             return{\r\n//                 options:response.data.map((city)=>{\r\n//                     return{\r\n//                         value:`${city.latitude} ${city.longitude}`,\r\n//                         label:`${city.name},${city.countryCode}`,\r\n//                 }\r\n//                 })\r\n//             }\r\n//         })\r\n//         .catch(err=>console.log(err))\r\n//     }\r\n//     const handleOnChange=(searchData)=>{\r\n//         setSearch(searchData)\r\n//         onSerachChange(searchData)\r\n//         }\r\n//     return (\r\n//     <div>\r\n//         <AsyncPaginate placeholder=\"Search for city\"\r\n//         debounceTimeout={2000} \r\n//         value={Search}\r\n//         onChange={handleOnChange}\r\n//         loadOptions={loadOptions}\r\n\r\n//         />\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Search\r\n\r\n\r\n\r\n\r\nimport React ,{useState}from 'react'\r\nimport {AsyncPaginate} from \"react-select-async-paginate\"\r\n\r\nfunction Search() {\r\n    const handleOnChange=(searchData)=>{\r\n                setSearch(searchData)\r\n                onSerachChange(searchData)\r\n      }\r\n    const [Search,setSearch]  =useState(null);\r\n\r\n  return (\r\n    <AsyncPaginate placeholder=\"Search for city\"\r\n         debounceTimeout={2000} \r\n        value={Search}\r\n       onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n     />\r\n  )\r\n}\r\n\r\nexport default Search"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAGC,QAAQ,QAAM,OAAO;AACpC,SAAQC,aAAa,QAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,cAAc,GAAEC,UAAU,IAAG;IACvBC,SAAS,CAACD,UAAU,CAAC;IACrBE,cAAc,CAACF,UAAU,CAAC;EACpC,CAAC;EACH,MAAM,CAACH,MAAM,EAACI,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE3C,oBACEG,OAAA,CAACF,aAAa;IAACS,WAAW,EAAC,iBAAiB;IACvCC,eAAe,EAAE,IAAK;IACvBC,KAAK,EAAER,MAAO;IACfS,QAAQ,EAAEP,cAAe;IAC1BQ,WAAW,EAAEA;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEP;AAACb,EAAA,CAfQD,MAAM;AAAAe,EAAA,GAANf,MAAM;AAiBf,eAAeA,MAAM;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}