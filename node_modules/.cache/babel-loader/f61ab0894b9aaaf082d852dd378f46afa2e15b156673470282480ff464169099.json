{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Desktop\\\\project\\\\react-weather-app\\\\src\\\\Component\\\\Search.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import { AsyncPaginate } from \"react-select-async-paginate\"\n// import { GEO_API_URL, geoApiOptions } from \"./Api\"\n\n// const Search = ({ onSerachChange }) => {\n\n//     const [Search, setSearch] = useState(null);\n\n//     const loadOptions = (inputValue) => {\n//         return fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions)\n\n//             .then(response => response.json())\n//             .then((response) => {\n//                 return {\n//                     options: response.data.map((city) => {\n//                         return {\n//                             value: `${city.latitude} ${city.longitude}`,\n//                             label: `${city.name} ${city.countryCode}`,\n//                         }\n//                     })\n//                 }\n//             })\n//             .catch((err) => console.log(err))\n//     };  \n//     const handleOnChange = (searchData) => {\n//         setSearch(searchData)\n//         onSerachChange(searchData)\n//     };\n//     return (\n//         <AsyncPaginate placeholder=\"Search for city\"\n//             debounceTimeout={2000}\n//             value={Search}\n//             onChange={handleOnChange}\n//             loadOptions={loadOptions}\n//         />\n//     )\n// }\n\n// export default Search;\n\nimport React, { useState } from 'react';\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [Search, setSearch] = useState(null);\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSerachChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n      placeholder: \"Search for city\",\n      debounceTimeout: 2000,\n      value: Search,\n      onChange: handleOnChange,\n      loadOptions: loadOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(Search, \"xOaWVJvRRgtitgc+1hBgz6V9Q/Y=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","setSearch","handleOnChange","searchData","onSerachChange","children","placeholder","debounceTimeout","value","onChange","loadOptions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Desktop/project/react-weather-app/src/Component/Search.jsx"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import { AsyncPaginate } from \"react-select-async-paginate\"\r\n// import { GEO_API_URL, geoApiOptions } from \"./Api\"\r\n\r\n// const Search = ({ onSerachChange }) => {\r\n\r\n//     const [Search, setSearch] = useState(null);\r\n\r\n//     const loadOptions = (inputValue) => {\r\n//         return fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions)\r\n\r\n//             .then(response => response.json())\r\n//             .then((response) => {\r\n//                 return {\r\n//                     options: response.data.map((city) => {\r\n//                         return {\r\n//                             value: `${city.latitude} ${city.longitude}`,\r\n//                             label: `${city.name} ${city.countryCode}`,\r\n//                         }\r\n//                     })\r\n//                 }\r\n//             })\r\n//             .catch((err) => console.log(err))\r\n//     };  \r\n//     const handleOnChange = (searchData) => {\r\n//         setSearch(searchData)\r\n//         onSerachChange(searchData)\r\n//     };\r\n//     return (\r\n//         <AsyncPaginate placeholder=\"Search for city\"\r\n//             debounceTimeout={2000}\r\n//             value={Search}\r\n//             onChange={handleOnChange}\r\n//             loadOptions={loadOptions}\r\n//         />\r\n//     )\r\n// }\r\n\r\n// export default Search;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport { AsyncPaginate } from \"react-select-async-paginate\"\r\n\r\nconst Search = () => {\r\n    const [Search, setSearch] = useState(null);\r\n\r\n    const handleOnChange = (searchData) => {\r\n                setSearch(searchData)\r\n               onSerachChange(searchData)\r\n       };\r\n    return (\r\n    <>\r\n\r\n         <AsyncPaginate placeholder=\"Search for city\"\r\n            debounceTimeout={2000}\r\n            value={Search}\r\n           onChange={handleOnChange}\r\n           loadOptions={loadOptions}\r\n       />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACD,MAAM,EAAEE,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,cAAc,GAAIC,UAAU,IAAK;IAC3BF,SAAS,CAACE,UAAU,CAAC;IACtBC,cAAc,CAACD,UAAU,CAAC;EAClC,CAAC;EACJ,oBACAP,OAAA,CAAAE,SAAA;IAAAO,QAAA,eAEKT,OAAA,CAACF,aAAa;MAACY,WAAW,EAAC,iBAAiB;MACzCC,eAAe,EAAE,IAAK;MACtBC,KAAK,EAAET,MAAO;MACfU,QAAQ,EAAEP,cAAe;MACzBQ,WAAW,EAAEA;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC,gBACH,CAAC;AAEP,CAAC;AAAAd,EAAA,CAlBKD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAoBZ,eAAeA,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}