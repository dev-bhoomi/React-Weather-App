{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Desktop\\\\project\\\\react-weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport Search from './Component/Search';\n// import CurrentWeather from './Component/Current-weather/Current-Weather'\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./Component/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [CurrentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecasteFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    Promise.all([CurrentWeatherFetch, forecasteFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecasteResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecasteResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(CurrentWeather);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onSerachChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"h5rzFXzGBdiewNI0nfaWrN8FYz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Search","WEATHER_API_URL","WEATHER_API_KEY","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","CurrentWeather","setCurrentWeather","forecast","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","CurrentWeatherFetch","fetch","forecasteFetch","Promise","all","then","response","weatherResponse","json","forecasteResponse","city","label","catch","err","console","log","children","className","onSerachChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Desktop/project/react-weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\n import \"./App.css\"\r\nimport Search from './Component/Search'\r\n// import CurrentWeather from './Component/Current-weather/Current-Weather'\r\nimport {WEATHER_API_URL,WEATHER_API_KEY} from \"./Component/Api\"\r\n\r\nconst App = () => {\r\n  const[CurrentWeather,setCurrentWeather] =useState(null);\r\n  const[forecast,setForecast] =useState(null);\r\n\r\n  const handleOnSearchChange=(searchData)=>{\r\n    const[lat,lon]=searchData.value.split(\" \");\r\n\r\n    const CurrentWeatherFetch=fetch(`${WEATHER_API_URL }/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\r\n    const forecasteFetch=fetch(`${WEATHER_API_URL }/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\r\n\r\n    Promise.all([CurrentWeatherFetch,forecasteFetch])\r\n    .then(async(response)=>{\r\n      const weatherResponse = await response[0].json();\r\n      const forecasteResponse = await response[1].json();\r\n\r\n      setCurrentWeather({ city:searchData.label,...weatherResponse});\r\n      setForecast({ city:searchData.label,...forecasteResponse});\r\n    })\r\n    .catch((err)=>console.log(err))\r\n     \r\n  }\r\n  console.log(CurrentWeather)\r\n  console.log(forecast)\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n    <Search onSerachChange={handleOnSearchChange}/>\r\n{/* { CurrentWeather &&  <CurrentWeather data={CurrentWeather}/> } */}\r\n <CurrentWeather />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACtC,OAAO,WAAW;AACnB,OAAOC,MAAM,MAAM,oBAAoB;AACvC;AACA,SAAQC,eAAe,EAACC,eAAe,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAK,CAACC,cAAc,EAACC,iBAAiB,CAAC,GAAEX,QAAQ,CAAC,IAAI,CAAC;EACvD,MAAK,CAACY,QAAQ,EAACC,WAAW,CAAC,GAAEb,QAAQ,CAAC,IAAI,CAAC;EAE3C,MAAMc,oBAAoB,GAAEC,UAAU,IAAG;IACvC,MAAK,CAACC,GAAG,EAACC,GAAG,CAAC,GAACF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE1C,MAAMC,mBAAmB,GAACC,KAAK,CAAE,GAAEnB,eAAiB,gBAAec,GAAI,QAAOC,GAAI,UAASd,eAAgB,EAAC,CAAC;IAC7G,MAAMmB,cAAc,GAACD,KAAK,CAAE,GAAEnB,eAAiB,iBAAgBc,GAAI,QAAOC,GAAI,UAASd,eAAgB,EAAC,CAAC;IAEzGoB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAACE,cAAc,CAAC,CAAC,CAChDG,IAAI,CAAC,MAAMC,QAAQ,IAAG;MACrB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,iBAAiB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAElDjB,iBAAiB,CAAC;QAAEmB,IAAI,EAACf,UAAU,CAACgB,KAAK;QAAC,GAAGJ;MAAe,CAAC,CAAC;MAC9Dd,WAAW,CAAC;QAAEiB,IAAI,EAACf,UAAU,CAACgB,KAAK;QAAC,GAAGF;MAAiB,CAAC,CAAC;IAC5D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAEjC,CAAC;EACDC,OAAO,CAACC,GAAG,CAACzB,cAAc,CAAC;EAC3BwB,OAAO,CAACC,GAAG,CAACvB,QAAQ,CAAC;EACrB,oBACEP,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1B/B,OAAA,CAACJ,MAAM;QAACqC,cAAc,EAAExB;MAAqB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAElDrC,OAAA,CAACK,cAAc;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAAjC,EAAA,CAhCKD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAkCT,eAAeA,GAAG;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}